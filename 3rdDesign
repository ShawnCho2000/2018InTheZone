
	bool ret = MoveLine(Back, powerToMove + 15);
	if (!ret){
		return;
	}

	writeDebugStreamLine("1");
	wait1Msec(300);
	ret = MoveLineStop(Back, powerToMove - 15);
	if (!ret){
		return;
	}

	writeDebugStreamLine("2");
	wait1Msec(GLOBAL_WAITER);
	moveMobileLiftUpToStackAuton(FULLPOWER, MAX_CLAWLIFT, powerClawLiftUp);
	wait1Msec(GLOBAL_WAITER);

	// MoveHelper(-FULLPOWER);
	// wait1Msec(1500);

	// ret = MoveLine(Left, -FULLPOWER);
	// if (!ret){
	// 	return;
	// }
	moveLiftDownAndStop(MIN_LIFT, powerliftDown);
	wait1Msec(GLOBAL_WAITER);
	openClaw(POWER_CLAW_OPEN); //for one cone only!
	wait1Msec(200); //for one cone only!
	stopClaw(); //for one cone only!

	ret = MoveLine(Back, -powerToMove);
	if (!ret){
		return;
	}

	wait1Msec(1000);
	ret = MoveLineStop(Back, -(powerToMove - 20));
	if (!ret){
		return;
	}

	// // wait1Msec(100);
	// ret = MoveLineStop(Left, -30);
	// if (!ret){
	// 	return;
	// }

	wait1Msec(GLOBAL_WAITER + 200);
	ret = TurnLine(Back, -(powerToMove-25));
	if (!ret){
		return;
	}
	wait1Msec(GLOBAL_WAITER + 200);
	ret = TurnLine(Back, (powerToMove-25));
	if (!ret){
		return;
	}
	wait1Msec(GLOBAL_WAITER);

	MoveIEM(490, -(powerToMove + 10));

	wait1Msec(GLOBAL_WAITER + 200);
	ret = TurnLine(Left, -(powerToMove-10));
	if (!ret){
		return;
	}

	MoveIEM(500, 110);
	wait1Msec(GLOBAL_WAITER);
	moveMobileLiftDownAndStopAuton(HIGHGOAL_MOBILELIFT);
	MoveHelper(50);
	wait1Msec(500);
	MoveHelper(0);
	wait1Msec(GLOBAL_WAITER);
	MoveHelper(-70);
	wait1Msec(GLOBAL_WAITER + 200);
	MoveHelper(0);
	wait1Msec(GLOBAL_WAITER);
	moveMobileLiftUpAndStop();
	wait1Msec(GLOBAL_WAITER);
	MoveIEM(250, -100);
	wait1Msec(GLOBAL_WAITER);
	moveMobileLiftUpAndStop();
	wait1Msec(1000);
	//TurnGyro(800, -50); //turn left
	ret = MoveLineStop(Left, powerToMove - 45); //move a bit forward
	if (!ret){
		return;
	}
	wait1Msec(GLOBAL_WAITER + 200);
	ret = TurnLine(Back, -(powerToMove - 20));  //turn left
	if (!ret){
		return;
	}
	wait1Msec(GLOBAL_WAITER);
	MoveIEM(100, -80); //move back
	wait1Msec(GLOBAL_WAITER + 200);
	ret = TurnLine(Back, -(powerToMove - 20));  //align with line
	if (!ret){
		return;
	}
	wait1Msec(GLOBAL_WAITER + 200);
	MoveIEM(200, -80); //move back along line
	wait1Msec(GLOBAL_WAITER);
	ret = TurnLine(Left, -(powerToMove - 25));  //align with line again
	if (!ret){
		return;
	}
	wait1Msec(GLOBAL_WAITER);
	ret = TurnLine(Right, powerToMove - 35);  //align with MG
	if (!ret){
		return;
	}
	moveMobileLiftDownToPickUpAuton(); //deploy mobile goal lift
	wait1Msec(GLOBAL_WAITER);

	MoveIEM(550, 50); //move forward to grab MG
	moveMobileLiftUpAndStop(); //pick up goal
	wait1Msec(GLOBAL_WAITER);
	ret = TurnLine(Back, powerToMove); //move back
	if (!ret){
		return;
	}
	wait1Msec(GLOBAL_WAITER);
	ret = TurnLine(Back, -(powerToMove - 35)); //move back
	if (!ret){
		return;
	}
	wait1Msec(GLOBAL_WAITER);
	MoveHelper(50);
	wait1Msec(1000);
	ret = MoveLineStop(Back, powerToMove - 20); //go forward from wall
	if (!ret){
		return;
	}
	wait1Msec(GLOBAL_WAITER);
	moveMobileLiftDownAndStop(); //deploy mobile goal again
	wait1Msec(GLOBAL_WAITER);
	MoveIEM(200, -50); //move back*/
	stopAll();

}

void autonRedFive() {
	bool leftSide = false;
	long startTime = nPgmTime;
	int powerToMove = 70;
	moveMobileLiftDownToPickUpAuton();
	//moveLiftUp(20);
	bool ret = MoveLine(Back, powerToMove + 15 - 20);
	if (!ret){
		return;
	}

	writeDebugStreamLine("1");
	wait1Msec(300);
	ret = MoveLineStop(Back, powerToMove - 20);
	if (!ret){
		return;
	}

	writeDebugStreamLine("2");
	wait1Msec(GLOBAL_WAITER);
	moveMobileLiftUpToStackAuton(FULLPOWER, MAX_CLAWLIFT, powerClawLiftUp);
	wait1Msec(GLOBAL_WAITER);

	// MoveHelper(-FULLPOWER);
	// wait1Msec(1500);

	// ret = MoveLine(Left, -FULLPOWER);
	// if (!ret){
	// 	return;
	// }
	moveLiftDownAndStop(MIN_LIFT, powerliftDown);
	wait1Msec(GLOBAL_WAITER);
	openClaw(POWER_CLAW_OPEN); //for one cone only!
	wait1Msec(200); //for one cone only!
	stopClaw(); //for one cone only!

	ret = MoveLine(Back, -powerToMove);
	if (!ret){
		return;
	}
	wait1Msec(GLOBAL_WAITER + 200);

	ret = MoveLineStop(Back, -(powerToMove - 20));
	if (!ret){
		return;
	}

	wait1Msec(GLOBAL_WAITER + 200);

	if (leftSide == false) {
		ret = TurnLine(Right, powerToMove - 20);
		if (!ret){
			return;
		}
		wait1Msec(GLOBAL_WAITER);
		TurnGyro(500, 50);
	}
	else {
		ret = TurnLine(Left, -(powerToMove - 20));
		if (!ret){
			return;
		}
		wait1Msec(GLOBAL_WAITER);
		TurnGyro(500, -50);
	}
	wait1Msec(GLOBAL_WAITER);
	moveMobileLiftDownToPickUp();
	wait1Msec(GLOBAL_WAITER);
	MoveIEM(100, -100);
	wait1Msec(GLOBAL_WAITER);

	writeDebugStreamLine("autonomous) Time: %d", nPgmTime - startTime);
}

void autonRed() {
	long startTime = nPgmTime;
	int powerToMove = 70;
	moveMobileLiftDownToPickUpAuton();
	//moveLiftUp(20);

	bool ret = MoveLine(Back, powerToMove + 15 - 20);
	if (!ret){
		return;
	}

	writeDebugStreamLine("1");
	wait1Msec(300);
	ret = MoveLineStop(Back, powerToMove - 20);
	if (!ret){
		return;
	}

	writeDebugStreamLine("2");
	wait1Msec(GLOBAL_WAITER);
	moveMobileLiftUpToStackAuton(FULLPOWER, MAX_CLAWLIFT, powerClawLiftUp);
	wait1Msec(GLOBAL_WAITER);

	// MoveHelper(-FULLPOWER);
	// wait1Msec(1500);

	// ret = MoveLine(Left, -FULLPOWER);
	// if (!ret){
	// 	return;
	// }
	moveLiftDownAndStop(MIN_LIFT, powerliftDown);
	wait1Msec(GLOBAL_WAITER);
	openClaw(POWER_CLAW_OPEN); //for one cone only!
	wait1Msec(200); //for one cone only!
	stopClaw(); //for one cone only!

	ret = MoveLine(Back, -powerToMove);
	if (!ret){
		return;
	}

	wait1Msec(1000);
	ret = MoveLineStop(Back, -(powerToMove - 20));
	if (!ret){
		return;
	}

	// // wait1Msec(100);
	// ret = MoveLineStop(Left, -30);
	// if (!ret){
	// 	return;
	// }

	wait1Msec(GLOBAL_WAITER + 200);
	ret = TurnLine(Back, -(powerToMove-20));
	if (!ret){
		return;
	}
	wait1Msec(GLOBAL_WAITER + 200);
	ret = TurnLine(Back, (powerToMove-25));
	if (!ret){
		return;
	}
	wait1Msec(GLOBAL_WAITER);

	MoveIEM(490, -(powerToMove + 10));

	wait1Msec(GLOBAL_WAITER + 200);

	ret = TurnLine(Left, -(powerToMove-10));
	if (!ret){
		return;
	}

	MoveIEM(500, 110);
	wait1Msec(GLOBAL_WAITER);
	moveMobileLiftDownAndStopAuton(HIGHGOAL_MOBILELIFT);
	MoveHelper(50);
	wait1Msec(500);
	MoveHelper(0);
	wait1Msec(GLOBAL_WAITER);
	MoveHelper(-70);
	wait1Msec(GLOBAL_WAITER + 200);
	MoveHelper(0);
	wait1Msec(GLOBAL_WAITER);
	moveMobileLiftUpAuton();
	wait1Msec(GLOBAL_WAITER);
	MoveIEM(250, -100);
	stopAll();

	// MoveHelper(40);
	// wait1Msec(500);
	// MoveHelper(0);


	// wait1Msec(GLOBAL_WAITER + 200);
	// ret = TurnLine(Back, 90);
	// if (!ret){
	// 	return;
	// }

	MoveHelper(0);


	/*
	moveLiftUpAndStop(LIFT_PICK_MOBILE + 100, powerLiftUp);
	//MoveAccel(1200, -70);
	wait1Msec(GLOBAL_WAITER + 200);
	TurnGyro(350, -50);
	wait1Msec(GLOBAL_WAITER + 200);
	//MoveAccel(350 + 100, -100);
	wait1Msec(GLOBAL_WAITER + 200);
	TurnGyro(650 + 150, -70);
	wait1Msec(GLOBAL_WAITER + 200);
	//MoveAccel(400, 100);
	wait1Msec(GLOBAL_WAITER);
	moveMobileLiftDownAndStopAuton(HIGHGOAL_MOBILELIFT);
	MoveHelper(50);
	wait1Msec(500);
	MoveHelper(0);
	wait1Msec(GLOBAL_WAITER);
	//MoveAccel(300, -50);
	stopAll();
	*/
	writeDebugStreamLine("autonomous) Time: %d", nPgmTime - startTime);

}

void autonRed2() {
	closeClaw(10);
	wait1Msec(300);
	MoveHelper(30);
	moveLiftUpForStationaryGoalAuton(STATIONARY_LIFT);
	MoveIEM(300, -30);
	wait1Msec(GLOBAL_WAITER);
	//TurnGyro(750, 70);
	//wait1Msec(GLOBAL_WAITER + 200);
	//MoveAccel(700, 50);
	stopAll();
}

// END LC
